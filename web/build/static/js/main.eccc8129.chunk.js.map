{"version":3,"sources":["core/NotificationService.jsx","theme/colors.js","theme/breakpoints.js","view/StateTile.jsx","core/Button.jsx","view/StatesList.jsx","api/stateList.js","view/StateDetails.jsx","App.jsx","index.js"],"names":["pushNotification","notificationType","title","Noty","type","text","theme","show","NotificationService","pushErrorNotification","pushInfoNotification","pushWarningNotification","pushSuccessNotification","colors","breakpoints","StyledLink","styled","Link","displayName","StyledTitle","p","StyledDetails","State","props","id","data","name","to","pathname","url","state","className","schoolCount","StyledButton","button","Button","value","useState","showValue","setStates","onClick","Styledtitle","StatesList","states","personIndexCounts","setPersonIndexCounts","useEffect","requestOptions","headers","method","body","JSON","stringify","fetch","process","then","res","json","fetchStateList","catch","fetchPersonIndexCounts","map","i","Object","entries","stateData","useHistory","location","count","foreignCountry","letter","stadtStaat","App","fallback","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eccc8129.chunk.js","sourcesContent":["import Noty from 'noty'\r\n\r\nfunction pushNotification (notificationType, title) {\r\n  new Noty({\r\n    type: notificationType,\r\n    text: title,\r\n    theme: 'mint'\r\n  }).show()\r\n}\r\n\r\nexport const NotificationService = {\r\n  pushErrorNotification: function (title) {\r\n    pushNotification('error', title)\r\n  },\r\n  pushInfoNotification: function (title) {\r\n    pushNotification('information', title)\r\n  },\r\n  pushWarningNotification: function (title) {\r\n    pushNotification('warning', title)\r\n  },\r\n  pushSuccessNotification: function (title) {\r\n    pushNotification('success', title)\r\n  }\r\n}\r\n\r\nexport default NotificationService\r\n","const white = '#ffffff'\r\nconst black = '#000000'\r\nconst gray = '#e9e8e8'\r\nconst gray100 = '#5a5656'\r\nconst gray200 = '#c2c0c0'\r\n\r\nexport const colors = {\r\n  white,\r\n  black,\r\n  gray,\r\n  gray100,\r\n  gray200\r\n}\r\n","const large = '800px'\r\nconst small = '500px'\r\n\r\nexport const breakpoints = {\r\n  large,\r\n  small\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { colors } from '../theme/colors'\r\nimport { breakpoints } from '../theme/breakpoints'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: ${colors.gray100};\r\n  width: calc(33.33% - 10px);\r\n  padding: 10px;\r\n  margin: 5px;\r\n  background-color: ${colors.white};\r\n  border: 10px solid ${colors.gray};\r\n  text-align: left;\r\n  &:hover {\r\n    background-color: ${colors.gray};\r\n    text-decoration: none;\r\n  }\r\n  @media only screen and (max-width: ${breakpoints.large}) {\r\n    width: calc(50% - 10px);\r\n  }\r\n  @media only screen and (max-width: ${breakpoints.small}) {\r\n    width: calc(100% - 10px);\r\n  }\r\n`\r\nStyledLink.displayName = 'StyledLink'\r\n\r\nconst StyledTitle = styled.p`\r\n  color: ${colors.black};\r\n  font-size: 18px;\r\n  margin-bottom: 5px;\r\n`\r\nStyledTitle.displayName = 'StyledTitle'\r\n\r\nconst StyledDetails = styled.p`\r\n  color: ${colors.gray200};\r\n  font-size: 14px;\r\n`\r\nStyledDetails.displayName = 'StyledDetails'\r\n\r\nexport default function State (props) {\r\n  return (\r\n    <>\r\n      <StyledLink\r\n        id={props.data.name}\r\n        to={{\r\n          pathname: props.data.url,\r\n          state: props.data\r\n        }}>\r\n        <StyledTitle className='font-weight-bold'>{props.data.name}</StyledTitle>\r\n        <StyledDetails className='font-weight-bold'>{props.data.schoolCount} Schulen</StyledDetails>\r\n      </StyledLink>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { colors } from '../theme/colors'\r\n\r\nconst StyledButton = styled.button`\r\n  background-color: ${colors.gray};\r\n  border: none;\r\n  margin-right: 5px;\r\n  color: ${colors.black};\r\n  font-weight: bold;\r\n  min-width: 30px;\r\n  min-height: 30px;\r\n`\r\nStyledButton.displayName = 'StyledButton'\r\n\r\nexport default function Button ({ text, value }) {\r\n  const [showValue, setStates] = useState(false)\r\n  return (\r\n  <StyledButton onClick={() => setStates(!showValue)}><span className='text-uppercase'>{text}</span> { showValue && <span> : {value}</span>}</StyledButton>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { fetchStateList, fetchPersonIndexCounts } from '../api/stateList'\r\nimport NotificationService from '../core/NotificationService'\r\nimport styled from 'styled-components'\r\nimport { colors } from '../theme/colors'\r\nimport StateTile from './StateTile'\r\nimport Button from '../core/Button'\r\n\r\nconst Styledtitle = styled.p`\r\n  color: ${colors.gray100};\r\n  font-size: 35px;\r\n  width: 100%;\r\n  background-color: ${colors.gray};\r\n  padding: 10px 10px 10px 20px;\r\n`\r\nStyledtitle.displayName = 'Styledtitle'\r\n\r\nexport default function StatesList () {\r\n  const [states, setStates] = useState([])\r\n  const [personIndexCounts, setPersonIndexCounts] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetchStateList()\r\n      .then((data) => { setStates(data) })\r\n      .catch(() => {\r\n        NotificationService.pushErrorNotification('Bundesländer nicht gefunden')\r\n      })\r\n    fetchPersonIndexCounts()\r\n      .then((data) => { setPersonIndexCounts(data) })\r\n      .catch(() => {\r\n        NotificationService.pushErrorNotification('Liste nicht gefunden')\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <Styledtitle className='font-weight-bold text-uppercase'>bundesländer</Styledtitle>\r\n      <div className='row mr-0 ml-0'>\r\n        { states.map((data, i) => <StateTile key={i} data={data} />) }\r\n      </div>\r\n      <div className='row mr-0 ml-0 mt-1 mb-1'>\r\n      {Object.entries(personIndexCounts).map(([text, value], i) => (\r\n        (value > 0) && <Button key={i} text={text} value={value} />\r\n      ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export function fetchStateList (data) {\r\n  const requestOptions = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    method: 'GET',\r\n    body: JSON.stringify(data)\r\n  }\r\n  return fetch(process.env.REACT_APP_DB_HOST + '/stateList', requestOptions).then((res) => res.json())\r\n}\r\n\r\nexport function fetchPersonIndexCounts (data) {\r\n  const requestOptions = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    method: 'GET',\r\n    body: JSON.stringify(data)\r\n  }\r\n  return fetch(process.env.REACT_APP_DB_HOST + '/personIndexCounts', requestOptions).then((res) => res.json())\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { colors } from '../theme/colors'\r\n\r\nconst Styledtitle = styled.p`\r\n  color: ${colors.gray100};\r\n  font-size: 35px;\r\n  width: 100%;\r\n  background-color: ${colors.gray};\r\n  padding: 10px 10px 10px 20px;\r\n`\r\nStyledtitle.displayName = 'Styledtitle'\r\n\r\nexport default function State () {\r\n  const history = useHistory()\r\n  const stateData = history.location.state\r\n  return (\r\n    <>\r\n      <Styledtitle className='font-weight-bold text-uppercase'>{stateData.name}</Styledtitle>\r\n      <ul className='list-group list-group-flush'>\r\n        <li className='list-group-item'>Zahlen: {stateData.count}</li>\r\n        <li className='list-group-item'>Fremdes Land: {stateData.foreignCountry ? 'Ja' : 'Nein'}</li>\r\n        <li className='list-group-item'>Buchstabe: {stateData.letter}</li>\r\n        <li className='list-group-item'>Schulen: {stateData.schoolCount}</li>\r\n        <li className='list-group-item'>Stadt Staat: {stateData.stadtStaat ? 'Ja' : 'Nein'}</li>\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","import React, { Suspense } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport StatesList from './view/StatesList'\r\nimport StateDetails from './view/StateDetails'\r\n\r\nexport default function App () {\r\n  return (\r\n    <Suspense fallback={<p>Page is loading...</p>}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/' render={() => <StatesList />} />\r\n          <Route exact path='/Bundesland/:url' render={() => <StateDetails />} />\r\n        </Switch>\r\n      </Router>\r\n    </Suspense>\r\n  )\r\n}\r\n","import './index.css'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'noty/lib/noty.css'\r\nimport 'noty/lib/themes/mint.css'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}